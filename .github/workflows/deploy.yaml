name: Deploy Website

on:
  push:
    branch: feature/deployment-workflow

jobs:
  build-website:
    name: "Build minified website"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.81.0"
          extended: true

      - name: Build
        run: hugo --minify

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: web-build
          path: ./public

  deploy-website:
    name: "Deploy minified website"
    runs-on: ubuntu-latest
    needs: build-website
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: web-build

      # - name: Deploy en build
      #   uses: JamesIves/github-pages-deploy-action@4.1.1
      #   with:
      #     branch: gh-pages
      #     folder: ./public/en

      - name: Check files
        shell: |
          ls -l

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-southeast-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPO_API: ${{ secrets.ECR_REPO_API }}
      #     ECR_REPO_WEB: ${{ secrets.ECR_REPO_WEB }}
      #   run: |
      #     # Build backend
      #     docker build -t $ECR_REGISTRY/$ECR_REPO_API:latest ./backend
      #     docker tag $ECR_REGISTRY/$ECR_REPO_API:latest $ECR_REGISTRY/$ECR_REPO_API:${GITHUB_REF##*/}
      #     docker push $ECR_REGISTRY/$ECR_REPO_API:latest
      #     docker push $ECR_REGISTRY/$ECR_REPO_API:${GITHUB_REF##*/}
      #     # Build frontend
      #     docker build -t $ECR_REGISTRY/$ECR_REPO_WEB:latest ./frontend
      #     docker tag $ECR_REGISTRY/$ECR_REPO_WEB:latest $ECR_REGISTRY/$ECR_REPO_WEB:${GITHUB_REF##*/}
      #     docker push $ECR_REGISTRY/$ECR_REPO_WEB:latest
      #     docker push $ECR_REGISTRY/$ECR_REPO_WEB:${GITHUB_REF##*/}
